@using Plotly.Blazor.LayoutLib
@using Plotly.Blazor.Traces.ScatterLib
@using System.Diagnostics

<PlotlyChart style="height: 60vh; min-height: 350px" @bind-Config="config" @bind-Layout="layout" @bind-Data="data" @ref="chart" />

<div class="text-right">
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("CapacityPC"))">PC Kapazität</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("CapacityPLT"))">PLT Kapazität</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("OutputPC"))">PC Output</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("OutputPLT"))">PLT Output</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("SalesPC"))">PC Verkäufe</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("SalesPLT"))">PLT Verkäufe</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("Marketshare"))">Marktanteil PC</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("PricePerPC"))">Verkaufspreis PC</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("Marketing"))">Marketingbudget</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("Saldo"))">Saldo</button>
    <button type="button" class="btn btn-primary" @onclick="@(e => AddScatter("Account"))">Kontostand</button>
</div>


@code
{
    PlotlyChart chart;

    Config config = new Config
    {
        Responsive = true
    };

    Layout layout = new Layout
    {
        Title = new Title
        {
            Text = ""
        },
        YAxis = new List<YAxis>
{
            new YAxis
            {
                Title = new LayoutLib.YAxisLib.Title
                {
                    Text = "Betrag"
                }
            }
        },
        Font = new Font { Family = "Anaheim" },
        Colorway = new List<object> { "0b0c10", "1f2833", "#c5c6c7", "66fcf1", "#45a29e", "d1e8e2" }
    };

    IList<ITrace> data = new List<ITrace>{
        new Scatter
        {
            Name = "",
            Mode = ModeFlag.Lines | ModeFlag.Markers,
            X = new List<object>(),
            Y = new List<object>()
        }
    };



    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //    {
    //        await ExtendData();
    //    }
    //}


    private async Task DeleteScatter()
    {
        await chart.DeleteTrace(0);
    }

    private async Task AddScatter(string key)
    {
        await chart.Clear();
        for (int i = 0; i < 6; i++)
        {
            var (x, y) = Helper.GenerateData(0, 100, data.Count + 1, key);
            await chart.AddTrace(new Scatter
            {

                Name = $"Firma {data.Count + 1}",
                Mode = ModeFlag.Lines | ModeFlag.Markers,
                X = x,
                Y = y
            });
        }
    }
}